{"version":3,"sources":["../src/server.js"],"names":["Server","app","config","init","options","req","res","next","header","send","mongoose","connect","db","err","console","log","listen","apiPort","server","module","exports"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;IAEMA,M;AACF,oBAAc;AAAA;AACV,SAAKC,GAAL,GAAW,0BAAX;AACA,SAAKC,MAAL,GAAcA,cAAd;AACA,SAAKC,IAAL;AACH;;;;WAED,gBAAO;AAAA;;AACH,gCAAc,KAAKF,GAAnB;AAEA,WAAKA,GAAL,CAASG,OAAT,CAAiB,IAAjB,EAAuB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AAC3CD,QAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,6BAA3C;AACAF,QAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,+DAA3C;AACAF,QAAAA,GAAG,CAACG,IAAJ,CAAS,GAAT;AACH,OALD;;AAOAC,2BAASC,OAAT,CACI,KAAKT,MAAL,CAAYU,EADhB,EAEI,UAAAC,GAAG,EAAI;AACH,YAAIA,GAAJ,EAAS;AACLC,UAAAA,OAAO,CAACC,GAAR,wCAA4CF,GAA5C;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,gCAAoC,KAAI,CAACb,MAAL,CAAYU,EAAhD,GADG,CAGH;;AACA,kCAAa,KAAI,CAACX,GAAlB,EAJG,CAMH;;AACA,UAAA,KAAI,CAACA,GAAL,CAASe,MAAT,CAAgB,KAAI,CAACd,MAAL,CAAYe,OAA5B,EAAqC,YAAM;AACvCH,YAAAA,OAAO,CAACC,GAAR,sCAA0C,KAAI,CAACb,MAAL,CAAYe,OAAtD;AACH,WAFD;AAGH;AACJ,OAhBL;;AAiBE;AACL;;;;;AAGL,IAAMC,MAAM,GAAC,IAAIlB,MAAJ,GAAaC,GAA1B;AACAkB,MAAM,CAACC,OAAP,GAAiBF,MAAjB;eACeA,M","sourcesContent":["import express from 'express';\r\nimport mongoose from 'mongoose';\r\n\r\nimport expressConfig from './config/express';\r\nimport { config } from './config/config';\r\nimport routesConfig from './config/routes';\r\n\r\nclass Server {\r\n    constructor() {\r\n        this.app = express();\r\n        this.config = config;\r\n        this.init();\r\n    }\r\n  \r\n    init() {  \r\n        expressConfig(this.app);\r\n\r\n        this.app.options(\"/*\", function(req, res, next){\r\n            res.header('Access-Control-Allow-Origin', '*');\r\n            res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\r\n            res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\r\n            res.send(200);\r\n        });\r\n\r\n        mongoose.connect(\r\n            this.config.db,\r\n            err => {\r\n                if (err) {\r\n                    console.log(`[MongoDB] Failed to connect. ${err}`);\r\n                } else {\r\n                    console.log(`[MongoDB] connected: ${this.config.db}`);\r\n        \r\n                    // initialize api\r\n                    routesConfig(this.app);\r\n        \r\n                    // start server\r\n                    this.app.listen(this.config.apiPort, () => {\r\n                        console.log(`[Server] listening on port ${this.config.apiPort}`);\r\n                    });\r\n                }\r\n            }\r\n        );;\r\n    }\r\n}\r\n\r\nconst server=new Server().app;\r\nmodule.exports = server\r\nexport default server;"],"file":"server.js"}