{"version":3,"sources":["../../src/config/auth.js"],"names":["jwt","require","authUser","req","res","next","bearerHeader","headers","bearer","split","bearerToken","verify","user","type","userId","id","status","send","ok","error","authAdmin","userType"],"mappings":"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","sourcesContent":["const jwt = require('jsonwebtoken');\r\n\r\n// Check if user authorizated\r\nexport async function authUser (req, res, next){\r\n    try {\r\n        const bearerHeader = req.headers['authorization'];\r\n        if (bearerHeader) {\r\n            const bearer = bearerHeader.split(' ');\r\n            const bearerToken = bearer[1];\r\n            const user = await jwt.verify(bearerToken, 'AmrEraky');\r\n            if(user.type) {\r\n                req.userId = user.id;\r\n                next();\r\n            } else {\r\n                res.status(401).send({\r\n                    ok: false,\r\n                    error: 'Not authorized to access this resource'\r\n                })\r\n                return;\r\n            }\r\n\r\n            \r\n        } else {\r\n            res.status(401).send({\r\n                ok: false,\r\n                error: 'Not authorized to access this resource'\r\n            })\r\n            return;\r\n        } \r\n    }\r\n    catch(error) {\r\n        res.status(401).send({\r\n            ok: false,\r\n            error\r\n        })\r\n        return;\r\n    }\r\n}\r\n\r\n// Check if admin authorizated\r\nexport async function authAdmin (req, res, next){\r\n    try {\r\n        const bearerHeader = req.headers['authorization'];\r\n        if (bearerHeader) {\r\n            const bearer = bearerHeader.split(' ');\r\n            const bearerToken = bearer[1];\r\n            const user = await jwt.verify(bearerToken, 'AmrEraky');\r\n            if(user.type) {\r\n                if (user.type === 'admin') {\r\n                    req.userId = user.id;\r\n                    req.userType = 'admin';\r\n                    next();\r\n                } else {\r\n                    res.status(401).send({\r\n                        ok: false,\r\n                        error: 'Not authorized to access this resource'\r\n                    })\r\n                    return;\r\n                }\r\n            } else {\r\n                res.status(401).send({\r\n                    ok: false,\r\n                    error: 'Not authorized to access this resource'\r\n                })\r\n                return;\r\n            }\r\n\r\n            \r\n        } else {\r\n            res.status(401).send({\r\n                ok: false,\r\n                error: 'Not authorized to access this resource'\r\n            })\r\n            return;\r\n        } \r\n    }\r\n    catch(error) {\r\n        res.status(401).send({\r\n            ok: false,\r\n            error\r\n        })\r\n        return;\r\n    }\r\n}"],"file":"auth.js"}