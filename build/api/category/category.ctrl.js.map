{"version":3,"sources":["../../../src/api/category/category.ctrl.js"],"names":["create","req","res","name","body","Category","findOne","category","_","isEmpty","status","send","ok","message","newCategory","save","err","error","id","_id","getAll","find","categories","deleteById","params","findByIdAndRemove","result"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\r\n\r\nimport Category from './category.model';\r\n\r\nasync function create(req, res) {\r\n    try {\r\n        const { name } = req.body;\r\n\r\n        let category = await Category.findOne({ name });\r\n        if (!_.isEmpty(category)) {\r\n            res.status(400)\r\n                .send({\r\n                    ok: false,\r\n                    message : \"A category with this name is exists.\",\r\n                })\r\n            return;\r\n        }\r\n\r\n        let newCategory = new Category();\r\n        newCategory.name = name;\r\n\r\n        await newCategory.save((err, category) => { \r\n            if (err) { \r\n                return res.status(400).send({ \r\n                    ok: false,\r\n                    error: err.message\r\n                }); \r\n            } \r\n            else { \r\n                return res.status(200).send({ \r\n                    ok: true,\r\n                    category: {\r\n                        name: category.name,\r\n                        id: category._id\r\n                    }\r\n                }); \r\n            } \r\n        });\r\n    } catch (e) {\r\n        res.status(400).send(e.message);\r\n    }\r\n}\r\n\r\nfunction getAll(req, res) {\r\n    Category.find({}, function(err, categories) {\r\n        if (err) {\r\n            res.status(400).send({\r\n                ok: false,\r\n                error: err.message\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).send({\r\n            ok: true,\r\n            categories\r\n        }); \r\n    });\r\n}\r\n\r\nfunction deleteById(req, res) {\r\n    const { id } = req.params;\r\n    Category.findByIdAndRemove(id, (err, result) => {\r\n        if (err) {\r\n            res.status(400).send({\r\n                ok: false,\r\n                error: err.message\r\n            });\r\n            return;\r\n        }\r\n        res.status(200).send({\r\n            ok: true,\r\n            message: `The '${result.name}' category has been deleted.`\r\n        });\r\n    });\r\n}\r\n\r\nexport default {\r\n    create,\r\n    getAll,\r\n    deleteById\r\n};"],"file":"category.ctrl.js"}